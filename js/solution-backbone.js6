class Solution extends Backbone.Model {
	constructor(options) {
		this.defaults = {
			"depot":  null,
			"trucks":  [],
		}
		super(options);
	}
}

class SolutionList extends BaseCollection {
	constructor(options) {
		this.url = '/solution';
		this.model = Solution;
		super(options);
	}
}

// The page of solutions
class SolutionPageView extends BaseView {
	constructor(options) {
		this.el = '.solutiondiv';
		this.collection = options.collection;
		this.evt = options.evt;
		super(options);
	}

	initialize(){
		this.solutionListView = new SolutionListView({solutions:this.collection, evt: this.evt});
		var that = this;
		this.render();
	}

	render(){
		this.$el.html(Templates.solutionPageTemplate());
		this.$el.find(".solution-list").append(this.solutionListView.render().$el);
		return this;
	}
}

// The list of solutions
class SolutionListView extends BaseView {
	constructor(options) {
		this.tagName = "tbody";
		this.evt = options.evt;
		super(options);
	}

	initialize(options){
		this.collection = options.solutions;
		this.listenTo(this.collection, "add", this.render);
		this.listenTo(this.collection, "change", this.change);
	}

	render() {
		this.collection.forEach(function(solution) {
			var solutionView = new SolutionView({model: solution, evt: this.evt});
			this.$el.html(solutionView.render().$el);
		}, this);
		return this;
	}

	change() {
		alert("update")
	}
}

// Each row of the table
class SolutionView extends BaseView {
	constructor(options) {
		this.tagName = "tr";
		this.events = {
			"click input[type=radio]": "setSolution"
		}
		this.evt = options.evt;
		super(options);
	}

	render() {
		this.$el.html(Templates.solutionTemplate({solution: this.model.toJSON()}));
		return this;
	}

	setSolution(e) {
		this.evt.trigger("setSolution", this.model);
	}
}



